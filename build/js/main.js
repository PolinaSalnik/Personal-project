$(function(){$(".owl-carousel").owlCarousel({items:3,margin:40,loop:!0,nav:!0})}),$(document).ready(function(){(new WOW).init()}),$(window).on("load",function(){$preloader=$(".loaderArea"),$loader=$preloader.find(".loader"),$loader.fadeOut(),$preloader.delay(850).fadeOut("slow")}),function(e){e(function(){e(".menu__icon").on("click",function(){e(this).closest(".menu").toggleClass("menu_state_open")}),e(".nav_links").on("click",function(){e(this).closest(".menu").removeClass("menu_state_open")})})}(jQuery);var form=document.querySelector(".contact-form"),requireInputs=document.querySelectorAll(".require");function checkForm(e){e.preventDefault(),removeAlerts(),checkInputs()}function checkInputs(){for(var e=0,n=0;n<requireInputs.length;n++)if(!requireInputs[n].value){e++;var t=document.createElement("span");t.classList.add("help-block"),t.innerHTML="Please, fill in the field",requireInputs[n].classList.add("errorMsg"),requireInputs[n].parentElement.insertBefore(t,null)}return 0===e&&(form.reset(),!0)}function removeAlerts(){for(var e=document.querySelectorAll(".help-block"),n=0;n<e.length;n++)e[n].remove();for(n=0;n<requireInputs.length;n++)requireInputs[n].classList.remove("errorMsg")}var countYears=$(".numberYears").text();$({numberValue:countYears}).animate({numberValue:13},{duration:9900,easing:"linear",step:function(){$(".numberYears").text(Math.ceil(this.numberValue))}});var countProjects=$(".numberProjects").text();$({numberValue:countProjects}).animate({numberValue:1033},{duration:9900,easing:"linear",step:function(){$(".numberProjects").text(Math.ceil(this.numberValue))}});var countCustomers=$(".numberCustomers").text();$({numberValue:countCustomers}).animate({numberValue:8050},{duration:9900,easing:"linear",step:function(){$(".numberCustomers").text(Math.ceil(this.numberValue))}}),$(document).ready(function(){$("nav").on("click","a",function(e){e.preventDefault();var n=$(this).attr("href"),t=$(n).offset().top;$("body, html").animate({scrollTop:t},1500)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsIm93bENhcm91c2VsIiwiaXRlbXMiLCJtYXJnaW4iLCJsb29wIiwibmF2IiwiZG9jdW1lbnQiLCJyZWFkeSIsIldPVyIsImluaXQiLCJ3aW5kb3ciLCJvbiIsIiRwcmVsb2FkZXIiLCIkbG9hZGVyIiwiZmluZCIsImZhZGVPdXQiLCJkZWxheSIsInRoaXMiLCJjbG9zZXN0IiwidG9nZ2xlQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImpRdWVyeSIsImZvcm0iLCJxdWVyeVNlbGVjdG9yIiwicmVxdWlyZUlucHV0cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjaGVja0Zvcm0iLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwicmVtb3ZlQWxlcnRzIiwiY2hlY2tJbnB1dHMiLCJlbXB0eUlucHV0cyIsImkiLCJsZW5ndGgiLCJ2YWx1ZSIsImVycm9yTXNnIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsImlubmVySFRNTCIsInBhcmVudEVsZW1lbnQiLCJpbnNlcnRCZWZvcmUiLCJyZXNldCIsImFsZXJ0cyIsInJlbW92ZSIsImNvdW50WWVhcnMiLCJ0ZXh0IiwibnVtYmVyVmFsdWUiLCJhbmltYXRlIiwiZHVyYXRpb24iLCJlYXNpbmciLCJzdGVwIiwiTWF0aCIsImNlaWwiLCJjb3VudFByb2plY3RzIiwiY291bnRDdXN0b21lcnMiLCJpZCIsImF0dHIiLCJ0b3AiLCJvZmZzZXQiLCJzY3JvbGxUb3AiXSwibWFwcGluZ3MiOiJBQUFFQSxFQUFFLFdBRVVBLEVBQUUsaUJBQ1JDLFlBQVksQ0FDZEMsTUFBTyxFQUNQQyxPQUFRLEdBQ1JDLE1BQU0sRUFDTkMsS0FBSyxNQUlUTCxFQUFFTSxVQUFVQyxNQUFNLFlBQ2hCLElBQUlDLEtBQU1DLFNBTVpULEVBQUVVLFFBQVFDLEdBQUcsT0FBUSxXQUNuQkMsV0FBYVosRUFBRSxlQUNiYSxRQUFVRCxXQUFXRSxLQUFLLFdBQzVCRCxRQUFRRSxVQUNSSCxXQUFXSSxNQUFNLEtBQUtELFFBQVEsVUFNaEMsU0FBV2YsR0FDVEEsRUFBRSxXQUNBQSxFQUFFLGVBQWVXLEdBQUcsUUFBUyxXQUMzQlgsRUFBRWlCLE1BQU1DLFFBQVEsU0FDYkMsWUFBWSxxQkFHakJuQixFQUFFLGNBQWNXLEdBQUcsUUFBUyxXQUUxQlgsRUFBRWlCLE1BQU1DLFFBQVEsU0FDYkUsWUFBWSx1QkFWckIsQ0FjR0MsUUFNSCxJQUFJQyxLQUFPaEIsU0FBU2lCLGNBQWMsaUJBQzlCQyxjQUFnQmxCLFNBQVNtQixpQkFBaUIsWUFFOUMsU0FBU0MsVUFBVUMsR0FDakJBLEVBQU1DLGlCQUNOQyxlQUNBQyxjQUdGLFNBQVNBLGNBRVAsSUFEQSxJQUFJQyxFQUFjLEVBQ1RDLEVBQUksRUFBR0EsRUFBSVIsY0FBY1MsT0FBUUQsSUFDeEMsSUFBS1IsY0FBY1EsR0FBR0UsTUFBTyxDQUUzQkgsSUFDQSxJQUFJSSxFQUFXN0IsU0FBUzhCLGNBQWMsUUFDdENELEVBQVNFLFVBQVVDLElBQUksY0FDdkJILEVBQVNJLFVBQVksNEJBQ3JCZixjQUFjUSxHQUFHSyxVQUFVQyxJQUFJLFlBQy9CZCxjQUFjUSxHQUFHUSxjQUFjQyxhQUFhTixFQUFVLE1BRzFELE9BQW9CLElBQWhCSixJQUNSVCxLQUFLb0IsU0FDUSxHQVFYLFNBQVNiLGVBRVAsSUFEQSxJQUFJYyxFQUFTckMsU0FBU21CLGlCQUFpQixlQUM5Qk8sRUFBSSxFQUFHQSxFQUFJVyxFQUFPVixPQUFRRCxJQUNqQ1csRUFBT1gsR0FBR1ksU0FFWixJQUFTWixFQUFJLEVBQUdBLEVBQUlSLGNBQWNTLE9BQVFELElBQ3hDUixjQUFjUSxHQUFHSyxVQUFVTyxPQUFPLFlBUXRDLElBQUlDLFdBQWE3QyxFQUFFLGdCQUFnQjhDLE9BRW5DOUMsRUFBRSxDQUNBK0MsWUFBYUYsYUFDWkcsUUFBUSxDQUNURCxZQUFhLElBQ1osQ0FDREUsU0FBVSxLQUNWQyxPQUFRLFNBQ1JDLEtBQU0sV0FDSm5ELEVBQUUsZ0JBQWdCOEMsS0FBS00sS0FBS0MsS0FBS3BDLEtBQUs4QixpQkFJMUMsSUFBSU8sY0FBZ0J0RCxFQUFFLG1CQUFtQjhDLE9BRXpDOUMsRUFBRSxDQUNBK0MsWUFBYU8sZ0JBQ1pOLFFBQVEsQ0FDVEQsWUFBYSxNQUNaLENBQ0RFLFNBQVUsS0FDVkMsT0FBUSxTQUNSQyxLQUFNLFdBQ0puRCxFQUFFLG1CQUFtQjhDLEtBQUtNLEtBQUtDLEtBQUtwQyxLQUFLOEIsaUJBSTdDLElBQUlRLGVBQWlCdkQsRUFBRSxvQkFBb0I4QyxPQUUzQzlDLEVBQUUsQ0FDQStDLFlBQWFRLGlCQUNaUCxRQUFRLENBQ1RELFlBQWEsTUFDWixDQUNERSxTQUFVLEtBQ1ZDLE9BQVEsU0FDUkMsS0FBTSxXQUNKbkQsRUFBRSxvQkFBb0I4QyxLQUFLTSxLQUFLQyxLQUFLcEMsS0FBSzhCLGlCQU85Qy9DLEVBQUVNLFVBQVVDLE1BQU0sV0FDaEJQLEVBQUUsT0FBT1csR0FBRyxRQUFTLElBQUssU0FBVWdCLEdBQ2hDQSxFQUFNQyxpQkFDTixJQUFJNEIsRUFBS3hELEVBQUVpQixNQUFNd0MsS0FBSyxRQUNsQkMsRUFBTTFELEVBQUV3RCxHQUFJRyxTQUFTRCxJQUN6QjFELEVBQUUsY0FBY2dELFFBQVEsQ0FDcEJZLFVBQVdGLEdBQ1oiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiAgJChmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBPd2wgQ2Fyb3VzZWxcclxuICAgIHZhciBvd2wgPSAkKFwiLm93bC1jYXJvdXNlbFwiKTtcclxuICAgIG93bC5vd2xDYXJvdXNlbCh7XHJcbiAgICAgIGl0ZW1zOiAzLFxyXG4gICAgICBtYXJnaW46IDQwLFxyXG4gICAgICBsb29wOiB0cnVlLFxyXG4gICAgICBuYXY6IHRydWVcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICBuZXcgV09XKCkuaW5pdCgpO1xyXG4gIH0pO1xyXG5cclxuXHJcbi8vUFJFTE9BREVSXHJcblxyXG4gICQod2luZG93KS5vbignbG9hZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICRwcmVsb2FkZXIgPSAkKCcubG9hZGVyQXJlYScpLFxyXG4gICAgICAkbG9hZGVyID0gJHByZWxvYWRlci5maW5kKCcubG9hZGVyJyk7XHJcbiAgICAkbG9hZGVyLmZhZGVPdXQoKTtcclxuICAgICRwcmVsb2FkZXIuZGVsYXkoODUwKS5mYWRlT3V0KCdzbG93Jyk7XHJcbiAgfSk7XHJcblxyXG5cclxuLy9NRU5VXHJcblxyXG4gIChmdW5jdGlvbiAoJCkge1xyXG4gICAgJChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICQoJy5tZW51X19pY29uJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQodGhpcykuY2xvc2VzdCgnLm1lbnUnKVxyXG4gICAgICAgICAgLnRvZ2dsZUNsYXNzKCdtZW51X3N0YXRlX29wZW4nKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICAkKCcubmF2X2xpbmtzJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoJy5tZW51JylcclxuICAgICAgICAgIC5yZW1vdmVDbGFzcygnbWVudV9zdGF0ZV9vcGVuJyk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBcclxuICB9KShqUXVlcnkpO1xyXG5cclxuXHJcbi8vRk9STVxyXG5cclxuICBcclxuICB2YXIgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWN0LWZvcm0nKTtcclxuICB2YXIgcmVxdWlyZUlucHV0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5yZXF1aXJlJyk7XHJcblxyXG4gIGZ1bmN0aW9uIGNoZWNrRm9ybShldmVudCkge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIHJlbW92ZUFsZXJ0cygpO1xyXG4gICAgY2hlY2tJbnB1dHMoKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNoZWNrSW5wdXRzKCkge1xyXG4gICAgdmFyIGVtcHR5SW5wdXRzID0gMDtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVxdWlyZUlucHV0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAoIXJlcXVpcmVJbnB1dHNbaV0udmFsdWUpIHtcclxuXHJcbiAgICAgICAgZW1wdHlJbnB1dHMrKztcclxuICAgICAgICB2YXIgZXJyb3JNc2cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICAgICAgZXJyb3JNc2cuY2xhc3NMaXN0LmFkZCgnaGVscC1ibG9jaycpO1xyXG4gICAgICAgIGVycm9yTXNnLmlubmVySFRNTCA9ICdQbGVhc2UsIGZpbGwgaW4gdGhlIGZpZWxkJztcclxuICAgICAgICByZXF1aXJlSW5wdXRzW2ldLmNsYXNzTGlzdC5hZGQoJ2Vycm9yTXNnJyk7XHJcbiAgICAgICAgcmVxdWlyZUlucHV0c1tpXS5wYXJlbnRFbGVtZW50Lmluc2VydEJlZm9yZShlcnJvck1zZywgbnVsbCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGlmIChlbXB0eUlucHV0cyA9PT0gMCkge1xyXG5mb3JtLnJlc2V0KCk7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuXHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZW1vdmVBbGVydHMoKSB7XHJcbiAgICB2YXIgYWxlcnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmhlbHAtYmxvY2snKTtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWxlcnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGFsZXJ0c1tpXS5yZW1vdmUoKTtcclxuICAgIH1cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVxdWlyZUlucHV0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICByZXF1aXJlSW5wdXRzW2ldLmNsYXNzTGlzdC5yZW1vdmUoJ2Vycm9yTXNnJyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG5cclxuLy9DT1VOVEVSXHJcblxyXG5cclxuICB2YXIgY291bnRZZWFycyA9ICQoJy5udW1iZXJZZWFycycpLnRleHQoKTtcclxuXHJcbiAgJCh7XHJcbiAgICBudW1iZXJWYWx1ZTogY291bnRZZWFyc1xyXG4gIH0pLmFuaW1hdGUoe1xyXG4gICAgbnVtYmVyVmFsdWU6IDEzXHJcbiAgfSwge1xyXG4gICAgZHVyYXRpb246IDk5MDAsXHJcbiAgICBlYXNpbmc6ICdsaW5lYXInLFxyXG4gICAgc3RlcDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAkKCcubnVtYmVyWWVhcnMnKS50ZXh0KE1hdGguY2VpbCh0aGlzLm51bWJlclZhbHVlKSk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHZhciBjb3VudFByb2plY3RzID0gJCgnLm51bWJlclByb2plY3RzJykudGV4dCgpO1xyXG5cclxuICAkKHtcclxuICAgIG51bWJlclZhbHVlOiBjb3VudFByb2plY3RzXHJcbiAgfSkuYW5pbWF0ZSh7XHJcbiAgICBudW1iZXJWYWx1ZTogMTAzM1xyXG4gIH0sIHtcclxuICAgIGR1cmF0aW9uOiA5OTAwLFxyXG4gICAgZWFzaW5nOiAnbGluZWFyJyxcclxuICAgIHN0ZXA6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgJCgnLm51bWJlclByb2plY3RzJykudGV4dChNYXRoLmNlaWwodGhpcy5udW1iZXJWYWx1ZSkpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICB2YXIgY291bnRDdXN0b21lcnMgPSAkKCcubnVtYmVyQ3VzdG9tZXJzJykudGV4dCgpO1xyXG5cclxuICAkKHtcclxuICAgIG51bWJlclZhbHVlOiBjb3VudEN1c3RvbWVyc1xyXG4gIH0pLmFuaW1hdGUoe1xyXG4gICAgbnVtYmVyVmFsdWU6IDgwNTBcclxuICB9LCB7XHJcbiAgICBkdXJhdGlvbjogOTkwMCxcclxuICAgIGVhc2luZzogJ2xpbmVhcicsXHJcbiAgICBzdGVwOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICQoJy5udW1iZXJDdXN0b21lcnMnKS50ZXh0KE1hdGguY2VpbCh0aGlzLm51bWJlclZhbHVlKSk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG5cclxuLy9TTE9XIFNDUk9MTFxyXG5cclxuICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICAkKFwibmF2XCIpLm9uKFwiY2xpY2tcIiwgXCJhXCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgdmFyIGlkID0gJCh0aGlzKS5hdHRyKCdocmVmJyksXHJcbiAgICAgICAgICAgIHRvcCA9ICQoaWQpLm9mZnNldCgpLnRvcDtcclxuICAgICAgICAkKCdib2R5LCBodG1sJykuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgIHNjcm9sbFRvcDogdG9wXHJcbiAgICAgICAgfSwgMTUwMCk7XHJcbiAgICB9KTtcclxufSk7Il19
